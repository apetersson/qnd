(function(){"use strict";var m=(e=>(e.None="NONE",e.Field="FIELD",e.Forest="FOREST",e.Mountain="MOUNTAIN",e.City="CITY",e.Water="WATER",e))(m||{}),t=(e=>(e.None="NONE",e.Farm="FARM",e.LumberHut="LUMBER_HUT",e.Mine="MINE",e.Sawmill="SAWMILL",e.Windmill="WINDMILL",e.Forge="FORGE",e.Market="MARKET",e.Monument="MONUMENT",e))(t||{});function I(e,i){const{x:n,y:r}=e;return[[0,-1],[0,1],[-1,0],[1,0],[-1,-1],[1,-1],[-1,1],[1,1]].map(([_,h])=>i.tiles.find(N=>N.x===n+_&&N.y===r+h)).filter(_=>!!_)}function b(e){return{width:e.width,height:e.height,tiles:e.tiles.map(i=>({...i}))}}var p=(e=>(e.Forestry="Forestry",e.Mathematics="Mathematics",e.Trade="Trade",e.Spiritualism="Spiritualism",e.Farming="Farming",e.Construction="Construction",e.Chivalry="Chivalry",e.Mining="Mining",e.Smithery="Smithery",e))(p||{});const v=[m.None,m.Field],H={id:"place-sawmill",description:"Place Sawmill",cost:5,requiredTech:p.Mathematics,perform:(e,i)=>{e.building=t.Sawmill},canApply:(e,i)=>!v.includes(e.terrain)||e.building!==t.None||!e.cityId||i.tiles.some(n=>n.cityId===e.cityId&&n.building===t.Sawmill)?!1:I(e,i).some(n=>n.building===t.LumberHut)},Y={id:"place-forge",description:"Place Forge",cost:5,requiredTech:p.Smithery,perform:(e,i)=>{e.building=t.Forge},canApply:(e,i)=>!v.includes(e.terrain)||e.building!==t.None||!e.cityId||i.tiles.some(n=>n.cityId===e.cityId&&n.building===t.Forge)?!1:I(e,i).some(n=>n.building===t.Mine)},J={id:"place-windmill",description:"Place Windmill",cost:5,requiredTech:p.Construction,perform:(e,i)=>{e.building=t.Windmill},canApply:(e,i)=>!v.includes(e.terrain)||e.building!==t.None||!e.cityId||i.tiles.some(n=>n.cityId===e.cityId&&n.building===t.Windmill)?!1:I(e,i).some(n=>n.building===t.Farm)},X={id:"place-market",description:"Place Market",cost:5,requiredTech:p.Trade,perform:(e,i)=>{e.building=t.Market},canApply:(e,i)=>!(!v.includes(e.terrain)||e.building!==t.None||!e.cityId||i.tiles.some(n=>n.cityId===e.cityId&&n.building===t.Market))},Q={id:"remove-forest",description:"Remove Forest",cost:-1,requiredTech:p.Forestry,perform:(e,i)=>{e.terrain===m.Forest&&(e.terrain=m.None)},canApply:(e,i)=>e.building===t.None&&e.terrain===m.Forest},Z={id:"burn-forest",description:"Burn Forest",cost:5,requiredTech:p.Construction,perform:(e,i)=>{e.terrain===m.Forest&&(e.terrain=m.Field)},canApply:(e,i)=>e.terrain===m.Forest&&e.building===t.None},B={id:"destroy-building",description:"Destroy Building",cost:0,requiredTech:p.Chivalry,perform:(e,i)=>{e.building=t.None},canApply:(e,i,n)=>{if(e.building===t.None)return!1;for(const r of n)if(G(r.actionId)&&r.x===e.x&&r.y===e.y)return!1;return!0}},ee={id:"grow-forest",description:"Grow Forest",cost:5,requiredTech:p.Spiritualism,perform:(e,i)=>{e.terrain=m.Forest},canApply:(e,i)=>e.terrain===m.None&&e.building===t.None},ie={id:"add-lumber-hut",description:"Add Lumber Hut",cost:3,requiredTech:p.Forestry,perform:(e,i)=>{e.building=t.LumberHut},canApply:(e,i)=>e.terrain===m.Forest&&e.building===t.None},te={id:"add-farm",description:"Add Farm",cost:5,requiredTech:p.Farming,perform:(e,i)=>{e.building=t.Farm},canApply:(e,i)=>e.terrain===m.Field&&e.building===t.None},ne={id:"add-mine",description:"Add Mine",cost:5,requiredTech:p.Mining,perform:(e,i)=>{e.building=t.Mine},canApply:(e,i)=>e.terrain===m.Mountain&&e.building===t.None},oe=[H,Y,J,X,Q,Z,B,ee,ie,te,ne];function G(e){return e.startsWith("place-")||e.startsWith("add-")}const P=[t.Sawmill,t.Windmill,t.Forge],re=[...P,t.Market];function j(e,i){switch(e.building){case t.Sawmill:return I(e,i).filter(n=>n.building===t.LumberHut).length;case t.Windmill:return I(e,i).filter(n=>n.building===t.Farm).length;case t.Forge:return I(e,i).filter(n=>n.building===t.Mine).length;default:return 1}}const se=8;function ce(e,i){if(e.building!==t.Market)return 0;let n=0;const r=I(e,i);for(const y of r)P.includes(y.building)&&(n+=Math.min(j(y,i),8));return Math.min(n,se)}function O(e){return e.tiles.reduce((i,n)=>i+ce(n,e),0)}function C(e){let i=0;const n={[t.Monument]:3,[t.LumberHut]:1,[t.Farm]:2,[t.Mine]:2,[t.Sawmill]:1,[t.Windmill]:1,[t.Forge]:2,[t.None]:0,[t.Market]:0};for(const r of e.tiles)r.building!==t.None&&(re.includes(r.building)?i+=j(r,e)*n[r.building]:(r.building===t.LumberHut||r.building===t.Farm||r.building===t.Mine)&&(i+=n[r.building]));return i}const ae=new Set(["remove-forest","burn-forest","grow-forest"]);function le(e){let i=2166136261;for(let n=0;n<e.length;n++)i^=e.charCodeAt(n),i=Math.imul(i,16777619);return("00000000"+(i>>>0).toString(16)).slice(-8)}function de(e){return le(JSON.stringify(e.tiles))}function ue(e,i){return{id:`${e.id}+${i.id}`,description:`${e.description} -> ${i.description}`,cost:e.cost+i.cost,requiredTech:e.requiredTech,perform:(n,r)=>{e.perform(n,r),i.perform(n,r)},canApply:()=>!0}}async function fe(e,i,n,r,y,_,h){const N=b(e),L=oe.filter(s=>n.hasOwnProperty(s.id)?n[s.id]:!0);console.log(L,"availableActions");let u=O(N),T=C(N),R=b(N),M=0,S=[],W=0;const $=new Map;async function K(s,A,F,q,V){if(i.canceled||F>r)return;const D=de(s);if($.has(D)&&$.get(D)<=F)return;$.set(D,F);const z=O(s),U=C(s);if((z>u||z===u&&U>T)&&(u=z,T=U,R=b(s),S=[...A],W=F,console.log(`New best bonus (intermediate): ${u} (Secondary: ${U}) at iteration ${M}.`),_(u,T,M,b(s),[...A])),M++,M%1e3===0){if(await new Promise(o=>setTimeout(o,0)),i.canceled)return;console.log($.size,"memo.size"),y==null||y(q),await new Promise(o=>setTimeout(o,0))}const w=[];for(let o=0;o<s.tiles.length;o++){const c=s.tiles[o];if(!(!c.cityId||!h[c.cityId])){for(const a of L)if(n[a.id]&&a.canApply(c,s,A))if(ae.has(a.id)){const l=b(s);a.perform(l.tiles[o],l);for(const f of L){if(!n[f.id]||!G(f.id))continue;const d=l.tiles[o];if(!f.canApply(d,l,A))continue;const g=ue(a,f);if(F+g.cost>r)continue;const E=b(s);g.perform(E.tiles[o],E);const ye=O(E),be=C(E);w.push({index:o,action:g,score:{primary:ye,secondary:be}})}}else{if(F+a.cost>r)continue;const l=b(s);a.perform(l.tiles[o],l);const f=O(l),d=C(l);w.push({index:o,action:a,score:{primary:f,secondary:d}})}}}if(w.length===0){const o=O(s),c=C(s);(o>u||o===u&&c>T)&&(u=o,T=c,R=b(s),S=[...A],W=F,console.log(`New best bonus: ${u} (Secondary: ${c}) after ${M} iterations.`),console.log("Optimization history (actions):",S),_(u,T,M,b(s),[...A]),await new Promise(a=>setTimeout(a,0)));return}function me(o){return(c,a)=>{for(const l of o){const f=l(c,a);if(f!==0)return f}return 0}}const pe=me([(o,c)=>{const a=s.tiles[o.index],l=s.tiles[c.index],f=I(a,s).some(g=>g.cityId&&g.cityId!==a.cityId),d=I(l,s).some(g=>g.cityId&&g.cityId!==l.cityId);return f&&!d?-1:!f&&d?1:0},(o,c)=>o.action.cost-c.action.cost,(o,c)=>c.score.secondary-o.score.secondary,(o,c)=>c.score.primary-o.score.primary]);w.sort(pe);const k=w.length;for(let o=0;o<k;o++){if(i.canceled)return;const c=w[o],a=q+(V-q)*(o/k),l=q+(V-q)*((o+1)/k);if(F+c.action.cost>r)continue;const f=c.index,d=s.tiles[f],g={...d},E={actionId:c.action.id,description:`${c.action.description} at (${d.x},${d.y})`+(d.cityId?` in city ${d.cityId}`:"")+` (cost: ${c.action.cost})`,x:d.x,y:d.y,cityId:d.cityId,cost:c.action.cost};A.push(E),c.action.perform(d,s),await K(s,A,F+c.action.cost,a,l),s.tiles[f]={...g},A.pop()}}return await K(N,[],0,0,1),i.canceled||y==null||y(1),console.log(`Optimization finished. Total iterations: ${M}. Best bonus: ${u}`),console.log("Optimization history (actions):",S),console.log("Total stars budget used:",W),console.log("total boards checked",$.size),R}let x={canceled:!1};self.onmessage=async e=>{const i=e.data;if(console.log("Worker received message:",i.type),i.type==="start"){const{board:n,dynamicOptions:r,overallBudget:y,cityToggles:_}=i.payload;x={canceled:!1};try{const h=u=>{self.postMessage({type:"progress",payload:u})},N=(u,T,R,M,S)=>{const W={marketBonus:u,foodBonus:T,iteration:R,boardSnapshot:b(M),history:[...S]};self.postMessage({type:"newSolution",payload:W})};console.log("Worker starting optimization...");const L=await fe(n,x,r,y,h,N,_);x.canceled?(console.log("Worker optimization cancelled during execution."),self.postMessage({type:"cancelled"})):(console.log("Worker finished optimization successfully."),self.postMessage({type:"result",payload:b(L)}))}catch(h){console.error("Worker encountered an error:",h),self.postMessage({type:"error",payload:h instanceof Error?h.message:String(h)})}}else i.type==="cancel"&&(console.log("Worker received cancel request."),x.canceled=!0)},self.postMessage({type:"ready"}),console.log("Optimization worker script loaded and ready.")})();
