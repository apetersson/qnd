(function(){"use strict";var p=(e=>(e.None="NONE",e.Field="FIELD",e.Forest="FOREST",e.Mountain="MOUNTAIN",e.City="CITY",e.Water="WATER",e))(p||{}),t=(e=>(e.None="NONE",e.Farm="FARM",e.LumberHut="LUMBER_HUT",e.Mine="MINE",e.Sawmill="SAWMILL",e.Windmill="WINDMILL",e.Forge="FORGE",e.Market="MARKET",e.Monument="MONUMENT",e))(t||{});function M(e,i){const{x:n,y:c}=e;return[[0,-1],[0,1],[-1,0],[1,0],[-1,-1],[1,-1],[-1,1],[1,1]].map(([h,l])=>i.tiles.find(A=>A.x===n+h&&A.y===c+l)).filter(h=>!!h)}function g(e){return{width:e.width,height:e.height,tiles:e.tiles.map(i=>({...i}))}}var b=(e=>(e.Forestry="Forestry",e.Mathematics="Mathematics",e.Trade="Trade",e.Spiritualism="Spiritualism",e.Farming="Farming",e.Construction="Construction",e.Chivalry="Chivalry",e.Mining="Mining",e.Smithery="Smithery",e))(b||{});const x=[p.None,p.Field],Y={id:"place-sawmill",description:"Place Sawmill",cost:5,requiredTech:b.Mathematics,perform:(e,i)=>{e.building=t.Sawmill},canApply:(e,i)=>!x.includes(e.terrain)||e.building!==t.None||!e.cityId||i.tiles.some(n=>n.cityId===e.cityId&&n.building===t.Sawmill)?!1:M(e,i).some(n=>n.building===t.LumberHut)},J={id:"place-forge",description:"Place Forge",cost:5,requiredTech:b.Smithery,perform:(e,i)=>{e.building=t.Forge},canApply:(e,i)=>!x.includes(e.terrain)||e.building!==t.None||!e.cityId||i.tiles.some(n=>n.cityId===e.cityId&&n.building===t.Forge)?!1:M(e,i).some(n=>n.building===t.Mine)},X={id:"place-windmill",description:"Place Windmill",cost:5,requiredTech:b.Construction,perform:(e,i)=>{e.building=t.Windmill},canApply:(e,i)=>!x.includes(e.terrain)||e.building!==t.None||!e.cityId||i.tiles.some(n=>n.cityId===e.cityId&&n.building===t.Windmill)?!1:M(e,i).some(n=>n.building===t.Farm)},Q={id:"place-market",description:"Place Market",cost:5,requiredTech:b.Trade,perform:(e,i)=>{e.building=t.Market},canApply:(e,i)=>!(!x.includes(e.terrain)||e.building!==t.None||!e.cityId||i.tiles.some(n=>n.cityId===e.cityId&&n.building===t.Market))},Z={id:"remove-forest",description:"Remove Forest",cost:-1,requiredTech:b.Forestry,perform:(e,i)=>{e.terrain===p.Forest&&(e.terrain=p.None)},canApply:(e,i)=>e.building===t.None&&e.terrain===p.Forest},B={id:"burn-forest",description:"Burn Forest",cost:5,requiredTech:b.Construction,perform:(e,i)=>{e.terrain===p.Forest&&(e.terrain=p.Field)},canApply:(e,i)=>e.terrain===p.Forest&&e.building===t.None},ee={id:"destroy-building",description:"Destroy Building",cost:0,requiredTech:b.Chivalry,perform:(e,i)=>{e.building=t.None},canApply:(e,i,n,c)=>{if(e.building===t.None)return!1;const y=n.filter(l=>l.actionId==="destroy-building").length,h=5;if((y+1)*h/c>1)return!1;for(const l of n)if(G(l.actionId)&&l.x===e.x&&l.y===e.y)return!1;return!0}},ie={id:"grow-forest",description:"Grow Forest",cost:5,requiredTech:b.Spiritualism,perform:(e,i)=>{e.terrain=p.Forest},canApply:(e,i)=>e.terrain===p.None&&e.building===t.None},te={id:"add-lumber-hut",description:"Add Lumber Hut",cost:3,requiredTech:b.Forestry,perform:(e,i)=>{e.building=t.LumberHut},canApply:(e,i)=>e.terrain===p.Forest&&e.building===t.None},ne={id:"add-farm",description:"Add Farm",cost:5,requiredTech:b.Farming,perform:(e,i)=>{e.building=t.Farm},canApply:(e,i)=>e.terrain===p.Field&&e.building===t.None},oe={id:"add-mine",description:"Add Mine",cost:5,requiredTech:b.Mining,perform:(e,i)=>{e.building=t.Mine},canApply:(e,i)=>e.terrain===p.Mountain&&e.building===t.None},re=[Y,J,X,Q,Z,B,ee,ie,te,ne,oe];function G(e){return e.startsWith("place-")||e.startsWith("add-")}const P=[t.Sawmill,t.Windmill,t.Forge],se=[...P,t.Market];function j(e,i){switch(e.building){case t.Sawmill:return M(e,i).filter(n=>n.building===t.LumberHut).length;case t.Windmill:return M(e,i).filter(n=>n.building===t.Farm).length;case t.Forge:return M(e,i).filter(n=>n.building===t.Mine).length;default:return 1}}const ce=8;function ae(e,i){if(e.building!==t.Market)return 0;let n=0;const c=M(e,i);for(const y of c)P.includes(y.building)&&(n+=Math.min(j(y,i),8));return Math.min(n,ce)}function O(e){return e.tiles.reduce((i,n)=>i+ae(n,e),0)}function C(e){let i=0;const n={[t.Monument]:3,[t.LumberHut]:1,[t.Farm]:2,[t.Mine]:2,[t.Sawmill]:1,[t.Windmill]:1,[t.Forge]:2,[t.None]:0,[t.Market]:0};for(const c of e.tiles)c.building!==t.None&&(se.includes(c.building)?i+=j(c,e)*n[c.building]:(c.building===t.LumberHut||c.building===t.Farm||c.building===t.Mine)&&(i+=n[c.building]));return i}const le=new Set(["remove-forest","burn-forest","grow-forest"]);function de(e){let i=2166136261;for(let n=0;n<e.length;n++)i^=e.charCodeAt(n),i=Math.imul(i,16777619);return("00000000"+(i>>>0).toString(16)).slice(-8)}function ue(e){return de(JSON.stringify(e.tiles))}function fe(e,i){return{id:`${e.id}+${i.id}`,description:`${e.description} -> ${i.description}`,cost:e.cost+i.cost,requiredTech:e.requiredTech,perform:(n,c)=>{e.perform(n,c),i.perform(n,c)},canApply:()=>!0}}async function me(e,i,n,c,y,h,l){const A=g(e),L=re.filter(r=>n.hasOwnProperty(r.id)?n[r.id]:!0);console.log(L,"availableActions");let f=O(A),T=C(A),R=g(A),F=0,S=[],W=0;const $=new Map;async function K(r,_,N,q,V){if(i.canceled||N>c)return;const v=ue(r);if($.has(v)&&$.get(v)<=N)return;$.set(v,N);const z=O(r),U=C(r);if((z>f||z===f&&U>T)&&(f=z,T=U,R=g(r),S=[..._],W=N,console.log(`New best bonus (intermediate): ${f} (Secondary: ${U}) at iteration ${F}.`),h(f,T,F,g(r),[..._])),F++,F%1e3===0){if(await new Promise(o=>setTimeout(o,0)),i.canceled)return;console.log($.size,"memo.size"),y==null||y(q),await new Promise(o=>setTimeout(o,0))}const H=c-N,w=[];for(let o=0;o<r.tiles.length;o++){const s=r.tiles[o];if(!(!s.cityId||!l[s.cityId])){for(const a of L)if(n[a.id]&&a.canApply(s,r,_,H))if(le.has(a.id)){const d=g(r);a.perform(d.tiles[o],d);for(const m of L){if(!n[m.id]||!G(m.id))continue;const u=d.tiles[o];if(!m.canApply(u,d,_,H))continue;const I=fe(a,m);if(N+I.cost>c)continue;const E=g(r);I.perform(E.tiles[o],E);const be=O(E),ge=C(E);w.push({index:o,action:I,score:{primary:be,secondary:ge}})}}else{if(N+a.cost>c)continue;const d=g(r);a.perform(d.tiles[o],d);const m=O(d),u=C(d);w.push({index:o,action:a,score:{primary:m,secondary:u}})}}}if(w.length===0){const o=O(r),s=C(r);(o>f||o===f&&s>T)&&(f=o,T=s,R=g(r),S=[..._],W=N,console.log(`New best bonus: ${f} (Secondary: ${s}) after ${F} iterations.`),console.log("Optimization history (actions):",S),h(f,T,F,g(r),[..._]),await new Promise(a=>setTimeout(a,0)));return}function pe(o){return(s,a)=>{for(const d of o){const m=d(s,a);if(m!==0)return m}return 0}}const ye=pe([(o,s)=>{const a=r.tiles[o.index],d=r.tiles[s.index],m=M(a,r).some(I=>I.cityId&&I.cityId!==a.cityId),u=M(d,r).some(I=>I.cityId&&I.cityId!==d.cityId);return m&&!u?-1:!m&&u?1:0},(o,s)=>o.action.cost-s.action.cost,(o,s)=>s.score.secondary-o.score.secondary,(o,s)=>s.score.primary-o.score.primary]);w.sort(ye);const k=w.length;for(let o=0;o<k;o++){if(i.canceled)return;const s=w[o],a=q+(V-q)*(o/k),d=q+(V-q)*((o+1)/k);if(N+s.action.cost>c)continue;const m=s.index,u=r.tiles[m],I={...u},E={actionId:s.action.id,description:`${s.action.description} at (${u.x},${u.y})`+(u.cityId?` in city ${u.cityId}`:"")+` (cost: ${s.action.cost})`,x:u.x,y:u.y,cityId:u.cityId,cost:s.action.cost};_.push(E),s.action.perform(u,r),await K(r,_,N+s.action.cost,a,d),r.tiles[m]={...I},_.pop()}}return await K(A,[],0,0,1),i.canceled||y==null||y(1),console.log(`Optimization finished. Total iterations: ${F}. Best bonus: ${f}`),console.log("Optimization history (actions):",S),console.log("Total stars budget used:",W),console.log("total boards checked",$.size),R}let D={canceled:!1};self.onmessage=async e=>{const i=e.data;if(console.log("Worker received message:",i.type),i.type==="start"){const{board:n,dynamicOptions:c,overallBudget:y,cityToggles:h}=i.payload;D={canceled:!1};try{const l=f=>{self.postMessage({type:"progress",payload:f})},A=(f,T,R,F,S)=>{const W={marketBonus:f,foodBonus:T,iteration:R,boardSnapshot:g(F),history:[...S]};self.postMessage({type:"newSolution",payload:W})};console.log("Worker starting optimization...");const L=await me(n,D,c,y,l,A,h);D.canceled?(console.log("Worker optimization cancelled during execution."),self.postMessage({type:"cancelled"})):(console.log("Worker finished optimization successfully."),self.postMessage({type:"result",payload:g(L)}))}catch(l){console.error("Worker encountered an error:",l),self.postMessage({type:"error",payload:l instanceof Error?l.message:String(l)})}}else i.type==="cancel"&&(console.log("Worker received cancel request."),D.canceled=!0)},self.postMessage({type:"ready"}),console.log("Optimization worker script loaded and ready.")})();
